{"componentChunkName":"component---src-templates-article-js","path":"/reviewer/reviewing-courses/","result":{"data":{"mdx":{"id":"6280e8ae-488e-5cf4-a9e3-14d57822455b","excerpt":"Review Process Steps Glossary Repo  - source code on Github called a  repository . Issue  - conversation in a  repo  before proposing changes. PR  - special  issue  attached to proposed changes called a  pull request . Code review  -  PR  approval…","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"date\": \"2019-05-23T00:00:00.000Z\",\n  \"title\": \"Review Process Overview\",\n  \"description\": \"This document details the processes egghead has defined to review and update courses.\",\n  \"categories\": [\"reviewer\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\n\nvar MDXLayout = function MDXLayout(_ref) {\n  var children = _ref.children;\n  return mdx(React.Fragment, null, children);\n};\n\nreturn function MDXContent(_ref2) {\n  var components = _ref2.components,\n      props = _objectWithoutProperties(_ref2, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"review-process-steps\"\n  }, \"Review Process Steps\"), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"../../../images/screenshots/review-05-review-process-gitflow.png\",\n    \"alt\": \"Spoiler alert: it’s all on GitHub\"\n  }))), mdx(\"h1\", {\n    \"id\": \"glossary\"\n  }, \"Glossary\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Repo\"), \" - source code on Github called a \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"repository\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Issue\"), \" - conversation in a \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"repo\"), \" before proposing changes.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"PR\"), \" - special \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"issue\"), \" attached to proposed changes called a \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"pull request\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Code review\"), \" - \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"PR\"), \" approval process with conversations attached to specific lines of code.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Project board\"), \" - the \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"eggheadio-projects\"), \" GitHub organization's \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/orgs/eggheadio-projects/projects/1\"\n  }), \"project board\"), \".\")), mdx(\"h1\", {\n    \"id\": \"steps\"\n  }, \"Steps\"), mdx(\"h2\", {\n    \"id\": \"anyone-eg-end-users-or-greenkeeper\"\n  }, \"Anyone (e.g. end users or Greenkeeper)\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Create an \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"issue\"), \" in a \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"repo\"), \".\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"GitHub automatically adds the issue to the \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"To do\"), \" column on the \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"project board\"), \".\")), mdx(\"h2\", {\n    \"id\": \"reviewer\"\n  }, \"Reviewer\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Pick an issue from the \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"To do\"), \" column on the project board.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Manually move the issue to the \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"In progress\"), \" column on the project board.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Assign yourself to the issue.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Fork the repo.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Commit updated dependencies and lock file.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Commit changes to resolve the issue.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Commit updated changelog.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Close the issue in a commit message.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Create a \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"PR\"), \" and \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://help.github.com/en/articles/allowing-changes-to-a-pull-request-branch-created-from-a-fork\"\n  }), \"allow changes to your PR\\u2019s branch\"), \".\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"GitHub automatically adds the PR (not the issue) to the \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Code review\"), \" column on the project board.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Commit changes requested in the \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"code review\"), \".\")), mdx(\"h2\", {\n    \"id\": \"continuous-integration-todo-milestone-1\"\n  }, \"Continuous Integration \", mdx(\"inlineCode\", {\n    parentName: \"h2\"\n  }, \"TODO: Milestone 1\")), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Lint changelog.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Check install for errors.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Check build for errors.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Check tests for errors.\")), mdx(\"h2\", {\n    \"id\": \"admin\"\n  }, \"Admin\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Request changes in the code review.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://www.atlassian.com/git/tutorials/using-branches/git-checkout\"\n  }), \"Check out\"), \" the PR in \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://vscode.rocks/github-pr-extension/\"\n  }), \"official VS Code extension\"), \".\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Commit updated lock file \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://help.github.com/en/articles/committing-changes-to-a-pull-request-branch-created-from-a-fork\"\n  }), \"to the PR\\u2019s branch\"), \" if it was updated in CodeSandbox.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Approve the PR.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Merge the PR.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"GitHub automatically moves the PR to the \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Resolved\"), \" column on the project board.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"GitHub automatically closes the issue and moves it to the \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Done\"), \" column on the project board.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Manually move the PR to the \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Done\"), \" column on the project board when deployed.\")), mdx(\"h2\", {\n    \"id\": \"web-service-todo-milestone-2\"\n  }, \"Web Service \", mdx(\"inlineCode\", {\n    parentName: \"h2\"\n  }, \"TODO: Milestone 2\")), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Receive \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"[pull_request](https://developer.github.com/v3/activity/events/types/#pullrequestevent)\"), \" \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://developer.github.com/v3/activity/events/types/#pullrequestevent\"\n  }), \"event\"), \" from GitHub webhook.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Process changelog.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Update database.\")), mdx(\"h1\", {\n    \"id\": \"updating-dependencies\"\n  }, \"Updating Dependencies\"), mdx(\"p\", null, \"Run \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"yarn latest\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"A\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Return\"), \" in the workspace root. Currently, it aliases \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"yarn upgrade-interactive --latest && yarn upgrade -L\"), \".\"), mdx(\"h1\", {\n    \"id\": \"changelog-format\"\n  }, \"Changelog Format\"), mdx(\"p\", null, \"Install the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://marketplace.visualstudio.com/items?itemName=dzgmelody.vscode-changelog-snippets\"\n  }), \"VS Code extension\"), \".\"), mdx(\"h2\", {\n    \"id\": \"template\"\n  }, \"Template\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"# Changelog\\n\\nAll notable changes to this project will be documented in this file.\\n\\nThe format is based on \\\\[Keep a Changelog\\\\](https://keepachangelog.com/en/1.0.0/),\\nand this project adheres to \\\\[Semantic Versioning\\\\](https://semver.org/spec/v2.0.0.html).\\n\\n## [Unreleased]\\n\\n### Added\\n\\n### Changed\\n\\n### Deprecated\\n\\n### Removed\\n\\n### Fixed\\n\\n### Security\\n\\n## 1.0.0 - YYYY-MM-DD\\n\\n### Added\\n\\n- This file.\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","timeToRead":1,"tableOfContents":{"items":[{"url":"#review-process-steps","title":"Review Process Steps"},{"url":"#glossary","title":"Glossary"},{"url":"#steps","title":"Steps","items":[{"url":"#anyone-eg-end-users-or-greenkeeper","title":"Anyone (e.g. end users or Greenkeeper)"},{"url":"#reviewer","title":"Reviewer"},{"url":"#continuous-integration-todo-milestone-1","title":"Continuous Integration TODO: Milestone 1"},{"url":"#admin","title":"Admin"},{"url":"#web-service-todo-milestone-2","title":"Web Service TODO: Milestone 2"}]},{"url":"#updating-dependencies","title":"Updating Dependencies"},{"url":"#changelog-format","title":"Changelog Format","items":[{"url":"#template","title":"Template"}]}]},"fields":{"slug":"/reviewer/reviewing-courses/","guide":"reviewer-guide","github":"undefined/content\\reviewer\\reviewing-courses\\index.mdx"},"frontmatter":{"title":"Review Process Overview","shareImage":null,"categories":["reviewer"],"showToc":null}}},"pageContext":{"id":"6280e8ae-488e-5cf4-a9e3-14d57822455b"}},"staticQueryHashes":["1655584978","3128451518"]}