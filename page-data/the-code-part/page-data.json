{"componentChunkName":"component---src-templates-article-js","path":"/the-code-part","result":{"data":{"mdx":{"id":"fee54a87-a29f-508a-be53-df9b0641fa27","excerpt":"The Code Part What to ask When it comes to what to ask, there are two kinds of questions, job questions such as how egghead likes to have certain things, and code questions such as how fix a certain bug.  With the job questions, you are encouraged toâ€¦","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"The Code Part\",\n  \"slug\": \"the-code-part\",\n  \"guide\": \"reviewer\",\n  \"published\": false\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"the-code-part\"\n  }, \"The Code Part\"), mdx(\"h3\", {\n    \"id\": \"what-to-ask\"\n  }, \"What to ask\"), mdx(\"p\", null, \"When it comes to what to ask, there are two kinds of questions, job questions such as how egghead likes to have certain things, and code questions such as how fix a certain bug. \"), mdx(\"p\", null, \"With the job questions, you are encouraged to always ask. You\\u2019ll ask the review team admin. \"), mdx(\"p\", null, \"When it comes to code questions, you are encouraged to do some of your own research first to see if you can figure out how to fix the bug or whatever issue you are having first before asking for help. The purpose for this is to help you learn things on your own and learning how to do your own research which you will be doing plenty of during your time with egghead. But keep in mind not to spend too much time researching, roughly 30 minutes, when you are having trouble and end up wasting time. \"), mdx(\"h3\", {\n    \"id\": \"debugging\"\n  }, \"Debugging\"), mdx(\"p\", null, \"The process for debugging really is just a lot of googleing. Google will be your best friend when trying to debug. Copy the error that you have in the console and paste that in google. One very popular place that you should keep in mind when researching a bug/error is \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://stackoverflow.com/\"\n  }), \"stackoverflow\"), \". You don\\u2019t need to post any questions there for work, but it\\u2019s a great place to find quick answers for yourself. \"), mdx(\"p\", null, \"If you are unable to figure out the bug on your own, DON\\u2019T WORRY! After spending a little bit of time on it, go onto the next lesson. A lot of the times when you run into a bug during a course, it will repeat itself on more than just one lesson. After figuring out what lessons are effected by the bug/error, then asking for help is a good idea. A fellow reviewer or team admin will be able to help you out and you\\u2019ll be able to continue with your work.\"), mdx(\"h3\", {\n    \"id\": \"steps-to-take\"\n  }, \"Steps to take:\"), mdx(\"p\", null, \"When you find a bug, here are some steps to take to fix/report it:  \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Short and precise title\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Concise but complete description: Steps to reproduce, consequences of the bug\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Good attachments\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Correct Severity & Priority\")), mdx(\"h3\", {\n    \"id\": \"updating\"\n  }, \"Updating\"), mdx(\"p\", null, \"When updating code, you\\u2019ll want to clone the repo to do all of your work in. This way, you can do any of your debugging and not worry about messing up any of the code in the upstream repo (the repo you cloned from). When you\\u2019re done, you\\u2019ll make a PR and post it into the slack \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"content-team\"), \" channel to let one of the admin\\u2019s know that it is ready for review/merge/implementation. \"), mdx(\"h3\", {\n    \"id\": \"migration-services-such-as-codesandbox-local-server-plunkr-etc\"\n  }, \"Migration (Services such as codesandbox, local server, plunkr, etc.)\"), mdx(\"p\", null, \"These services are essential to how egghead provides its course examples to the users. This is how we display our working code so that the users can either copy it or mess around with it on our website. It provides the user with a great visual of how the code is supposed to work outside of the video and a way for them to interact with it. We are trying to move away from services such as plunker and start using codesandbox as much as possible. Codesandbox is the current service we are using to deliver our code examples to the user. It works with more languages and is closer to how someone would want to run the server locally whereas a service such as plunker is a bit more out of date. \"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"- Choose the course you are gong to be reviewing on our [projects board](https://github.com/orgs/eggheadio-projects/projects/1). \\n- Drag the course over into the *Working On* column. \\n- Find the repository that the course is in.\\n- Fork that into your own repository. \\n- Clone your forked repository onto your computer.\\n- Open codesandbox and open the [github wizard](https://codesandbox.io/s/github). \\n- Paste in the link to the lesson from github that you are working on. \\n- Make all of your changes/debugging on codesandbox until it\\u2019s updated/working.\\n- Paste that code back into your cloned repository. \\n- Commit those changes. \\n- Once you have finished with all of these, make a pull request for your fork into the main fork. \\n- Make sure to remember to drag your course from the *Working On* column to the *Needs Review* column in the [projects board](https://github.com/orgs/eggheadio-projects/projects/1). \\n- Post your pull request into the `content-team` so one of the admins can review it. \\n\")), mdx(\"h3\", {\n    \"id\": \"changing-a-projects-structure\"\n  }, \"Changing a project's structure\"), mdx(\"p\", null, \"Changing multiple branches into just a master branch. Making sure its egghead structure.\"), mdx(\"p\", null, \"All of the lessons should be in one master branch. The old way of doing it was having each lesson in a separate branch. Now we want everything on the master branch, but with each lesson in its own folder. Example\"), mdx(\"p\", null, \"The easy/manual way of changing the structure is starting out with forking the repository. Then you\\u2019ll \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"git checkout\"), \" through each branch, and for each one, to copy everything into a file on your desktop labeled \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"lesson-01\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"lesson-02\"), \", etc. Once you have all of the lessons copied and on your desktop, \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"git checkout\"), \" into the master branch and paste those files into the master branch. Once this is done, delete all of the other branches, make a pull request, and post that pull request into the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"content-team\"), \" channel. \"));\n}\n;\nMDXContent.isMDXComponent = true;","timeToRead":3,"tableOfContents":{"items":[{"url":"#the-code-part","title":"The Code Part","items":[{"items":[{"url":"#what-to-ask","title":"What to ask"},{"url":"#debugging","title":"Debugging"},{"url":"#steps-to-take","title":"Steps to take:"},{"url":"#updating","title":"Updating"},{"url":"#migration-services-such-as-codesandbox-local-server-plunkr-etc","title":"Migration (Services such as codesandbox, local server, plunkr, etc.)"},{"url":"#changing-a-projects-structure","title":"Changing a project's structure"}]}]}]},"fields":{"slug":"/reviewer/the code part/replace-me/","guide":null,"github":"https://github.com/eggheadio/how-to-egghead/tree/master/src\\content\\reviewer\\the code part\\replace-me.mdx"},"frontmatter":{"title":"The Code Part","shareImage":null,"categories":null,"showToc":null}}},"pageContext":{"id":"fee54a87-a29f-508a-be53-df9b0641fa27"}},"staticQueryHashes":["1655584978","3128451518"]}