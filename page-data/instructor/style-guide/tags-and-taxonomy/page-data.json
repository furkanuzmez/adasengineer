{"componentChunkName":"component---src-templates-article-js","path":"/instructor/style-guide/tags-and-taxonomy/","result":{"data":{"mdx":{"id":"b647fbda-ce17-5766-9ec5-5d7042b1427f","excerpt":"Taxonomy is the intersection of pure data organization and human needs to allow us to actually find stuff. Some basic principles of a solid taxonomy structure are: Broad and shallow is better than narrow and deep. Labels should be clear and uniqueâ€¦","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"date\": \"2019-01-01T00:00:00.000Z\",\n  \"title\": \"content tags and taxonomy\",\n  \"description\": \"Taxonomy is the intersection of pure data organization and human needs to allow us to actually find stuff.\",\n  \"categories\": [\"instructor\", \"content\"],\n  \"published\": true,\n  \"shareImage\": \"https://res.cloudinary.com/dg3gyk0gu/image/upload/v1571260698/og-image-assets/share_image_screencasting.png\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Taxonomy is the intersection of pure data organization and human needs to allow us to actually find stuff. Some basic principles of a solid taxonomy structure are:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Broad and shallow is better than narrow and deep.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Labels should be clear and unique.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Resources shouldn\\u2019t, ideally, fit in lots of parallel terms within a single grouping.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"We should use language and words that site visitors use.\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Taxonomy has a job\"), \" on a website. The job of taxonomy on egghead.io is to:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"help users find \\u201Cmore lessons just like this\\u201D\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"help users find \\u201Cyou might also like\\u201D\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"guide users who are unsure what path to follow\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"establish egghead.io as go-to learning resource by helping users feel confident and prepared while they\\u2019re learning new skills\")), mdx(\"h2\", {\n    \"id\": \"egghead-resource-taxonomy\"\n  }, \"egghead Resource Taxonomy\"), mdx(\"h3\", {\n    \"id\": \"languages\"\n  }, \"Languages\"), mdx(\"p\", null, \"Programming language the lesson is written for. This list would be expanded over time: Ruby, C#, etc.\"), mdx(\"h3\", {\n    \"id\": \"libraries\"\n  }, \"Libraries\"), mdx(\"p\", null, \"\\u201CBuilt-with\\u201D, these are extensions to core languages. A single project can use lots of libraries together.\"), mdx(\"p\", null, \"rxjs, lodash, express, tweenlite\"), mdx(\"h3\", {\n    \"id\": \"frameworks\"\n  }, \"Frameworks\"), mdx(\"p\", null, \"\\u201CBuilt-on\\u201D, these are a foundational shortcut to a final product. Generally not combined with each other.\"), mdx(\"p\", null, \"React, Angular, Ember, Svelte\"), mdx(\"h3\", {\n    \"id\": \"tools-and-utilities\"\n  }, \"Tools (and Utilities)\"), mdx(\"p\", null, \"Things that make development life easier, these tend to be useful across languages and frameworks.\"), mdx(\"p\", null, \"S3, github, vim, webpack, npm, chrome, eslint\"), mdx(\"h3\", {\n    \"id\": \"platform\"\n  }, \"Platform\"), mdx(\"p\", null, \"Development or runtime platform (is that still a real word, \\u201Cruntime\\u201D????) featured in the lesson. This isn\\u2019t for \\u201CI recorded this screencast on a Mac\\u201D, but rather \\u201CHere\\u2019s how you handle swipe animations on Android.\\u201D\"), mdx(\"p\", null, \"Windows, Mac, iOS, Android, Linux, Node, Firebase\"), mdx(\"h3\", {\n    \"id\": \"skill-set\"\n  }, \"Skill Set\"), mdx(\"p\", null, \"Broad grouping to help people narrow down the kinds of lessons they\\u2019re looking for. \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"This list should be added to very sparingly\"), \", otherwise it can get overcrowded and turn into a generic tag-cloud pretty quickly.\"), mdx(\"p\", null, \"front-end, back-end, full-stack, a11y, database, jamstack\"), mdx(\"h3\", {\n    \"id\": \"skill-level\"\n  }, \"Skill Level\"), mdx(\"p\", null, \"Who is this lesson aimed at? Try to articulate, for new users, what the difference between the levels is.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Beginner\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Intermediate\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Advanced\")), mdx(\"h3\", {\n    \"id\": \"collections\"\n  }, \"Collections\"), mdx(\"p\", null, \"These are very task-focused, which both maps well to how people think about their jobs, and also helps establish egghead as simpatico experts who understand what this kind of work really entails.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"em\", {\n    parentName: \"li\"\n  }, \"All collections are curated\"), \". They\\u2019re not simply pre-filtered lists, but thoughtfully organized resources designed to help the user develop a specific skill set.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any given lesson may fit in multiple collections.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"collections can be designed and created by a single instructor (in which case they may have some sort of \\u201Cpremier\\u201D label), or compiled after-the-fact from a patchwork of different resources.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Collections should be tagged with the same technology and skill taxonomies as individual resources. These shouldn\\u2019t automatically be inherited up: if a collection includes a single React lesson, the collection shouldn\\u2019t be tagged with React. But if the collection as a whole is a bunch of resources about integrating React into your workflow, it should be tagged with React.\")), mdx(\"p\", null, \"Remember that Libraries, Frameworks, and specific Utilities have their own sections and don\\u2019t belong in here. There\\u2019s no need to create a collection like \\u201CIntroduction to Webstorm\\u201D if just filtering down resources to Tools > Webstorm will generate the same list.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/instructor/content-strategy\"\n  }), \"egghead's content strategy\"))));\n}\n;\nMDXContent.isMDXComponent = true;","timeToRead":2,"tableOfContents":{"items":[{"url":"#egghead-resource-taxonomy","title":"egghead Resource Taxonomy","items":[{"url":"#languages","title":"Languages"},{"url":"#libraries","title":"Libraries"},{"url":"#frameworks","title":"Frameworks"},{"url":"#tools-and-utilities","title":"Tools (and Utilities)"},{"url":"#platform","title":"Platform"},{"url":"#skill-set","title":"Skill Set"},{"url":"#skill-level","title":"Skill Level"},{"url":"#collections","title":"Collections"}]}]},"fields":{"slug":"/instructor/style-guide/tags-and-taxonomy/","guide":"instructor-guide","github":"https://github.com/eggheadio/how-to-egghead/tree/master/content\\instructor\\style-guide\\tags-and-taxonomy\\index.mdx"},"frontmatter":{"title":"content tags and taxonomy","shareImage":"https://res.cloudinary.com/dg3gyk0gu/image/upload/v1571260698/og-image-assets/share_image_screencasting.png","categories":["instructor","content"],"showToc":null}}},"pageContext":{"id":"b647fbda-ce17-5766-9ec5-5d7042b1427f"}},"staticQueryHashes":["1655584978","3128451518"]}