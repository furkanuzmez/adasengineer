{"componentChunkName":"component---src-templates-article-js","path":"/instructor/style-guide/talking-about-code/","result":{"data":{"mdx":{"id":"45d9e24f-c684-5a3d-abcb-e5693cc669e0","excerpt":"You’ve nailed your title, summary, and code example. Now it’s time to figure out what you’re going to say. The “instructor” title can feel daunting. Don’t let it! If you’ve ever shown someone how to do something, you’re an experienced instructor…","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"date\": \"2019-01-01T00:00:00.000Z\",\n  \"title\": \"How to talk about code for understanding\",\n  \"description\": \"Learn about the egghead style and how to apply it to your own content.\",\n  \"categories\": [\"instructor\", \"style\"],\n  \"published\": true,\n  \"shareImage\": \"https://res.cloudinary.com/dg3gyk0gu/image/upload/v1571260698/og-image-assets/share_image_style.png\",\n  \"redirect_from\": [\"/speak-concisely/\", \"/speak-concisely\", \"/how-to-instruct/\", \"/how-to-instruct\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar ResponsiveEmbed = makeShortcode(\"ResponsiveEmbed\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"You\\u2019ve nailed your title, summary, and code example. Now it\\u2019s time to figure out what you\\u2019re going to say.\"), mdx(\"p\", null, \"The \\u201Cinstructor\\u201D title can feel daunting. Don\\u2019t let it! If you\\u2019ve ever shown someone how to do something, you\\u2019re an experienced instructor.\"), mdx(\"h3\", {\n    \"id\": \"speak-to-support-the-code\"\n  }, \"Speak to support the code\"), mdx(\"p\", null, \"In your lesson, you should show first (with your code) then maybe explain (with your voice). Your narration is quite simply the explanation of the changes you\\u2019re making to your code as you take it from its \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"start\"), \" state to its \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"finished\"), \" state.\"), mdx(\"p\", null, \"You won\\u2019t be asking questions that teachers typically do, like \\u201CWhat themes can we draw from this?\\u201D You will simply relay information, explain how and why you did what, and let the learners soak it in. \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Keep it simple and focused on the code.\")), mdx(\"h3\", {\n    \"id\": \"focus-on-accessible-speech\"\n  }, \"Focus on Accessible Speech\"), mdx(\"p\", null, \"Using \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"vague words\"), \" in screencasts can make them unclear or hard to comprehend, particularly for people with visual impairments.  There are many reasons that would make vague wording difficult to understand, with or without disabilities, and using accessible speech benefits all. Learn more about what you can do to make your lessons more acessible \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/instructor/style-guide/accessible-speech\"\n  }), mdx(\"strong\", {\n    parentName: \"a\"\n  }, \"here\")), \"!\"), mdx(\"h3\", {\n    \"id\": \"write-a-script-or-outline\"\n  }, \"Write a script or outline\"), mdx(\"p\", null, \"Your narration should sound casual but informed, like you\\u2019re showing something to a coworker. Some instructors find it helpful to \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"write out a script\"), \" beforehand so they\\u2019re never in doubt of what to say. It\\u2019s a great way to cut the \\u201Cumm\\u201Ds and \\u201Cuhh\\u201Ds and make your explanation as tight as possible.\"), mdx(\"p\", null, \"If you\\u2019d rather sound more conversational, less scripted, \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"write out an outline\"), \". We\\u2019re talking bullet points\\u2014the keywords you want to say, the points you want to hit. This approach may require you to edit a few seconds of dead air here and there, but the published narration will sound polished.\"), mdx(\"h3\", {\n    \"id\": \"do-a-dress-rehearsal\"\n  }, \"Do a dress rehearsal\"), mdx(\"p\", null, \"Have you ever conducted a workshop? Talked at a conference? Presented to your sixth grade class? You know how essential it is to practice your talk before showtime.\"), mdx(\"p\", null, \"Same with egghead lessons. Before you hit record, explain your code example to yourself. Out loud. Enunciate! Be confident! Believe you\\u2019re the most qualified instructor in the history of egghead!\"), mdx(\"p\", null, \"You\\u2019ll probably trip over your words. You might realize you know how to do something but not how to \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"articulate\"), \" it. That\\u2019s okay\\u2014write notes to yourself and put your knowledge into words.\"), mdx(\"p\", null, \"When it\\u2019s time to record, you\\u2019ll be more than ready.\"), mdx(\"h1\", {\n    \"id\": \"speak-concisely\"\n  }, \"Speak concisely\"), mdx(\"p\", null, \"By now, you know the drill: egghead lessons are short and to the point. That goes for the videos, which should be 1\\u201310 minutes long. It also goes for your narration. Less is more.\"), mdx(\"p\", null, \"Consider this example:\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Hello! Before we get started using Webpack you are going to need to install node. We are going to visit this URL and find the link to install it. Now we press \\\"download\\\" and we should get a file. We can now open that file and extract its contents. Now that node is installed, we can use npm to install webpack globally. Great. Now that webpack is installed globally, we can use it! Open up Sublime or your favorite editor to start working on the config.\")), mdx(\"p\", null, \"Holy backstory! If you think back to our \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/what-makes-a-great-lesson\"\n  }), \"cheesecake-stuffed cookie cake example\"), \", we don't have to explain or justify each step in the instruction. We can assume we\\u2019re delivering content to smart, capable humans who can fill in some blanks. We have to. There\\u2019s instructing to do, and the clock is ticking.\"), mdx(\"p\", null, \"Without the over-instruction, we have a much more concise, energetic start to the lesson.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"We've got node already installed. Use npm to install webpack. Now run init and open the config to edit it.\")), mdx(\"p\", null, \"Note how active those sentences are: \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"install webpack. Run init. Open the config\"), \". Those are instructions.\"), mdx(\"h3\", {\n    \"id\": \"how-much-personality-can-we-bring-to-our-lessons\"\n  }, \"How much personality can we bring to our lessons?\"), mdx(\"p\", null, \"Bring all your charm and favorite idioms to your narration \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"as long as they support your code example\"), \". That\\u2019s what egghead learners come to see: good code. Use the \\u201Cshow your work\\u201D trick to determine if you should talk less, code more.\"), mdx(\"h1\", {\n    \"id\": \"the-show-your-work-trick\"\n  }, \"The \\u201Cshow your work\\u201D trick\"), mdx(\"p\", null, \"egghead lessons are concise by definition, but there\\u2019s another reason to keep your lessons sharply defined.\"), mdx(\"p\", null, \"Too many ideas in one lesson means you\\u2019re glossing over concepts. Let\\u2019s say you mention \\u201Ccondition X could crash your app\\u201D because you want to cover your bases, yet you don\\u2019t take the time to really get into that subject. All you\\u2019ve accomplished is alarming your audience without giving them any solution.\"), mdx(\"h3\", {\n    \"id\": \"show-dont-tell\"\n  }, \"Show, don\\u2019t tell\"), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Show your work!\"), \" You probably heard this when your high school math teacher forced you to write out the steps to a solution to get full credit for your answer.\"), mdx(\"p\", null, \"It applies to coding instruction, too. The simple act of typing something out, highlighting a block with your mouse, or logging something in the console makes concepts infinitely more approachable.\"), mdx(\"p\", null, \"If a user sees you walk through those steps, they gain confidence that they can do it, too. If they only hear you \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"talking\"), \" about concepts, they can\\u2019t readily tie the concepts back to the code. Worse yet, they might stop paying attention altogether.\"), mdx(\"h3\", {\n    \"id\": \"record-one-thought-at-a-time\"\n  }, \"Record one thought at a Time\"), mdx(\"p\", null, \"Think of your lessons as series of 20-second paragraphs, recording in short, high-quality chunks... One thought at a time.  Pause after every chunk, and your future-self will thank you as you edit your lesson.\"), mdx(ResponsiveEmbed, {\n    src: \"https://egghead.io/lessons/tools-record-one-thought-at-a-time/embed\",\n    mdxType: \"ResponsiveEmbed\"\n  }), mdx(\"h3\", {\n    \"id\": \"watch-on-mute\"\n  }, \"Watch on mute\"), mdx(\"p\", null, \"Here\\u2019s the trick: Turn off your audio and watch your lesson without sound.\"), mdx(\"p\", null, \"It should be obvious from the visuals what you\\u2019re teaching. You may notice periods of 5+ seconds where nothing is happening. \\u201CNothing\\u201D usually means you\\u2019re getting off-topic and thought it would be tough to \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"show\"), \" what you\\u2019re talking about. When you catch a section of \\u201Cnothing,\\u201D write down the topic you weren\\u2019t showing. Save it for another lesson!\"), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"https://media.giphy.com/media/fAT2Db0j0Mblu/giphy.gif\",\n    \"alt\": null\n  }))), mdx(\"p\", null, \"With this one trick, you\\u2019ll quickly turn one lesson with a lot of tangents into a focused, concise lesson about one topic. Or if you\\u2019re interested in creating a workshop, those tangents could each be a separate lesson.\"));\n}\n;\nMDXContent.isMDXComponent = true;","timeToRead":4,"tableOfContents":{"items":[{"items":[{"items":[{"url":"#speak-to-support-the-code","title":"Speak to support the code"},{"url":"#focus-on-accessible-speech","title":"Focus on Accessible Speech"},{"url":"#write-a-script-or-outline","title":"Write a script or outline"},{"url":"#do-a-dress-rehearsal","title":"Do a dress rehearsal"}]}]},{"url":"#speak-concisely","title":"Speak concisely","items":[{"items":[{"url":"#how-much-personality-can-we-bring-to-our-lessons","title":"How much personality can we bring to our lessons?"}]}]},{"url":"#the-show-your-work-trick","title":"The “show your work” trick","items":[{"items":[{"url":"#show-dont-tell","title":"Show, don’t tell"},{"url":"#record-one-thought-at-a-time","title":"Record one thought at a Time"},{"url":"#watch-on-mute","title":"Watch on mute"}]}]}]},"fields":{"slug":"/instructor/style-guide/talking-about-code/","guide":"instructor-guide","github":"undefined/content\\instructor\\style-guide\\talking-about-code\\index.mdx"},"frontmatter":{"title":"How to talk about code for understanding","shareImage":"https://res.cloudinary.com/dg3gyk0gu/image/upload/v1571260698/og-image-assets/share_image_style.png","categories":["instructor","style"],"showToc":null}}},"pageContext":{"id":"45d9e24f-c684-5a3d-abcb-e5693cc669e0"}},"staticQueryHashes":["1655584978","3128451518"]}