{"componentChunkName":"component---src-templates-article-js","path":"/instructor/screencasting/sharing-code/plunker/","result":{"data":{"mdx":{"id":"b56c20e8-0a53-5032-856d-5079f4eb9f22","excerpt":"Plunker allows us to embed even fairly complex apps as runnable examples, perfect for our learners to run with. There are two ways to use it: You’ll typically use  Plunker’s public UI  and set up your code example there. For standalone lessons, feel…","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"date\": \"2019-01-01T00:00:00.000Z\",\n  \"title\": \"Using Plunker to Share Code\",\n  \"description\": \"Plunker is a versatile code running platform.\",\n  \"categories\": [\"instructor\", \"screencasting\", \"plunker\"],\n  \"published\": true\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Plunker allows us to embed even fairly complex apps as runnable examples, perfect for our learners to run with. There are two ways to use it:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"You\\u2019ll typically use \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Plunker\\u2019s public UI\"), \" and set up your code example there. For standalone lessons, feel free to just do this. It works great.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Plunker also supports loading your code \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"directly into the embed via Github\"), \". This is an amazing feature that allows us to version control the examples presented to the user. egghead can then handle maintenance on your examples and keep them updated and supported for a much longer time. :muscle:\")), mdx(\"p\", null, \"Much as we love Plunker, there are cases where it just won\\u2019t work. In those cases, simply link to a GitHub repository.\"), mdx(\"h3\", {\n    \"id\": \"link-a-plunker-embed-to-a-github-repo\"\n  }, \"Link a Plunker embed to a GitHub repo\"), mdx(\"p\", null, \"Linking a GitHub repository to Plunker is fairly simple and involves configuring the Plunker embed url. We start with \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://embed.plnkr.co/\"\n  }), \"https://embed.plnkr.co/\"), \" , which is the base embed url. To link to Github we configure the url by adding:\"), mdx(\"p\", null, \"`\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://embed.plnkr.co/github/%7Bprofile-name%7D/%7Brepository%7D/%7Bbranch%7D%60%60\"\n  }), \"https://embed.plnkr.co/github/{profile-name}/{repository}/{branch}``\")), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"{branch}\"), \" can be replaced with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"{tag|sha1}\"), \" depending on how your repo is set up. If your repo is set up with an example in individual folders, you can add that \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/path\"), \" to the embed url.\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/eggheadio-projects/nlp-in-javascript-with-natural\"\n  }), \"Here\\u2019s an example Github repo\"), \", which is divided into one folder per lesson.\"), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"https://lh4.googleusercontent.com/BN85gMdmTnjYqHeoEwsHzjtXWp-ihYBBQULZI4C6tz0jmyhGGTjnkHwEOiYqTMn3w28D7bvq9Lvgixz5QdBtQM8mfs7V1vfOgYiRQIaahBfd22lcHBqEqARyqgWhzPib478Gmgz2\",\n    \"alt\": null\n  }))), mdx(\"h3\", {\n    \"id\": \"additional-plunker-embed-config\"\n  }, \"Additional Plunker embed config\"), mdx(\"p\", null, \"URL parameters can be added to affect how the embed presents itself. The most-used feature is showing specific files (the default being the index and preview). Add \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"?show=\"), \" to the end of the url with the various filenames separated by commas.\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"https://embed.plnkr.co/github/eggheadio-projects/egghead-wikipedia-demo/angular-2-building\")), mdx(\"p\", null, \"You\\u2019ll see a complex example of this \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://embed.plnkr.co/github/eggheadio-projects/egghead-wikipedia-demo/angular-2-building-an-instant-search-with-angular-2-combining-observables-with-flatmap?preview=plnkr.html&show=src%2Fapp%2Fapp.component.ts,preview\"\n  }), \"here\"), \".\"), mdx(\"p\", null, \"If you want to go wild, \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://ggoodman.gitbooks.io/plunker/content/embed.html\"\n  }), \"this gist documents\"), \" quite a few additional parameters you can use.\"), mdx(\"h3\", {\n    \"id\": \"build-complex-apps-in-plunker\"\n  }, \"Build complex apps in Plunker\"), mdx(\"p\", null, \"Before you go any further, \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"stop!\"), \" You don\\u2019t need to build apps in Plunker. egghead will do this for you. Just hit up @zac in Slack and we\\u2019ll get to it.\"), mdx(\"p\", null, \"...but if you\\u2019re the DIY type, this is actually pretty cool.\"), mdx(\"p\", null, \"Plunker itself doesn\\u2019t support the node file system\\u2014import and export statements in Plunker will not work. But it is possible to create an in-browser Typescript compiler. This is usually required for Angular lesson examples. Doing this takes a bit of set up, so hang in there!\"), mdx(\"p\", null, \"Here\\u2019s what you do.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"1)\"), \" Install jspm on your local machine if it isn\\u2019t already. It\\u2019s an auto-configure systemjs tool:\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"$ npm i -g jspm@beta\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"2)\"), \" Run in whatever dir pleases you:\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"$ jspm init\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"3)\"), \" Select all the defaults given to you. Then run:\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"$ jspm i npm:{package_you_want_to_install}\"), \"\\nFor instance: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"jspm i npm:data.task\"), \" This will give a verbose working example of the config file needed to achieve in-browser compiling.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"4)\"), \" After init is done, this is the barebones .html page you will need:\"), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"https://lh3.googleusercontent.com/QfBRAe4xp95hUC9bSIhOaSanvInun0erAoUtjBQTdZ9AldfSC_-aOj-2nv1gbCf28B3MXmQK46WI0ABJCBbP8FBwjY2F-c8nmWOr79KsqIWWw5QaD2TsX4-nWEbXUGBEeJGZd1aE\",\n    \"alt\": null\n  }))), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"5)\"), \" You then need to create an \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"app.js\"), \" file in the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"src\"), \" directory \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"src/app.js\"), \" . This file will contain the code you want to run. Any packages that are installed using\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"jspm i npm:{package_you_want_to_install}\"), \" will create a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"jspm_packages/npm/{package_you_want_to_install}@1.2.3.json\"), \" file.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"6)\"), \" \\u26A1\\uFE0F Copy those contents. \\u26A1\\uFE0F\\nThe content will be placed in your \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"SystemJS.config\"), \" under the packages property as the package you installed. For instance:\"), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"https://lh5.googleusercontent.com/8j8p214IkMmQBkcdc9Y8m4ctaHcRfZGMksRnYHJ3IOa0y0okvb6TE0gVjZu-8a0qL_S_XRFnayxS1ID9yEh_EYuIbum_Arlwriy9sFeIaCLiausO2wqcFmUwFnFPeLLo9V5_Y4T9\",\n    \"alt\": null\n  }))), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"7)\"), \" Jspm will also give you a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"jspm.config.js\"), \" file: Copy this file, with some slight modifications.\"), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"https://lh5.googleusercontent.com/Vyby8a90s6HEJspKmtAsyx6rzK_G0t1lUUtehzkc_3S-7e6QealWhI-yuSpP8IAf65BGyGOTG73BbStHeuna8SI9OmRU6xjZnEcbfqdK6xhUpiZ4AK_3gVRdRFe0AqNk32fFGDsn\",\n    \"alt\": null\n  }))), mdx(\"p\", null, \"Note that the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"\\\"baseURL\\\":\"), \" property was changed from \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/\"), \" to a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".\")), mdx(\"p\", null, \"Also note that\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"\\\"systemjs-babel-build\\\": \\\"npm:systemjs-plugin-babel/systemjs-babel-browser.js\"), \" \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"line was added under the\"), \" \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"map\"), \" property (nested in the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"devConfig\"), \" property).\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"8)\"), \" For Plunker apps, just add this script tag (in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"index.html\"), \" ): \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<scriptsrc=\\\"https://unpkg.com/systemjs@0.19.41/dist/system.src.js\\\"></script>\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"9)\"), \" Then the two \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"SystemJS.config\"), \" objects can be added in their own script. Now you\\u2019re good to go!\"), mdx(\"p\", null, \"Here\\u2019s \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://embed.plnkr.co/UxkIoIK9PEkaupwTInDE?show=script.js,preview\"\n  }), \"one last example of a Plunker embed\"), \" to send you on your way.\"));\n}\n;\nMDXContent.isMDXComponent = true;","timeToRead":2,"tableOfContents":{"items":[{"url":"#link-a-plunker-embed-to-a-github-repo","title":"Link a Plunker embed to a GitHub repo"},{"url":"#additional-plunker-embed-config","title":"Additional Plunker embed config"},{"url":"#build-complex-apps-in-plunker","title":"Build complex apps in Plunker"}]},"fields":{"slug":"/instructor/screencasting/sharing-code/plunker/","guide":"instructor-guide","github":"undefined/content\\instructor\\screencasting\\sharing-code\\plunker\\index.mdx"},"frontmatter":{"title":"Using Plunker to Share Code","shareImage":null,"categories":["instructor","screencasting","plunker"],"showToc":null}}},"pageContext":{"id":"b56c20e8-0a53-5032-856d-5079f4eb9f22"}},"staticQueryHashes":["1655584978","3128451518"]}